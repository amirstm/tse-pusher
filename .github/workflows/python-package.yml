# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python Application
run-name: Linting and packaging the python application.

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  python-build:

    name: Build Python Library
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Analysing the code with pylint
      run: |
        pylint tsetmc_pusher/
    - name: Build package
      run: python setup.py sdist bdist_wheel
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip-existing: true

  docker-image-build:

    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker build
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          context : .
          push: ${{ github.event_name != 'pull_request' }}
          tags: amirstm/tsetmc-pusher
          cache-from: type=gha
          cache-to: type=gha,mode=max
